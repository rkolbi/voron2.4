#.................................................................................................................
[gcode_macro _HEAT_WAIT]
description: Heating cycle waiting routine
gcode:
    STATUS_HEATING                                                                   ; Set status to heating
    SET_NOZZLE_LEDS_ON                                                               ; Turn on nozzle LEDs
    {% set MINUTES = params.MINUTES|default(10)|int %}                               ; Get minutes from parameter or default
    {% set MSG = params.MSG|default("Warming...")|string %}                          ; Get message from parameter or default
    {% for i in range(0, MINUTES) %}                                                 ; Loop for each minute
        M117 {MSG} {MINUTES-i} minute remaining.                                     ; Display message
        {% for s in range(0, 60) %}                                                  ; Loop for each second
            G4 P1000                                                                 ; Wait 1 second
        {% endfor %}                                                                 ; End second loop
    {% endfor %}                                                                     ; End minute loop
    STATUS_READY                                                                     ; Set status to ready



#.................................................................................................................
[gcode_macro _COOL_WAIT]
description: Cooling cycle waiting routine
gcode:
    STATUS_COOLING                                                                   ; Set status to cooling
    SET_NOZZLE_LEDS_ON                                                               ; Turn on nozzle LEDs
    M106 S150                                                                        ; Turn on the fan
    {% set MINUTES = params.MINUTES|default(1)|int %}                                ; Get minutes from parameter or default
    {% set MSG = params.MSG|default("Cooling...")|string %}                          ; Get message from parameter or default
    {% set NZL_TEMP = params.NZL_TEMP|default(1)|int %}                              ; Get nozzle temperature from parameter or default
    {% for i in range(0, MINUTES) %}                                                 ; Loop for each minute
        M117 {MSG} {MINUTES-i} minute remaining, or until nozzle < {NZL_TEMP}C.      ; Display message
        {% for s in range(0, 60) %}                                                  ; Loop for each second
            _DWELL NZL_TEMP={NZL_TEMP}                                               ; Wait 1 second or until nozzle < NZL_TEMP
        {% endfor %}                                                                 ; End second loop
    {% endfor %}                                                                     ; End minute loop
    M107                                                                             ; Turn off the fan
    STATUS_READY                                                                     ; Set status to ready
    M117 Finished cooling.                                                           ; Display message
   
[gcode_macro _DWELL]
gcode:
    {% set NZL_TEMP = params.NZL_TEMP|default(1)|int %}                              ; Get nozzle temperature from parameter or default
    {% if printer.extruder.temperature > NZL_TEMP %}                                 ; Check if nozzle temperature is greater than NZL_TEMP
        G4 P1000                                                                     ; Wait 1 second
    {% endif %}                                                                      ; End nozzle temperature check



#.................................................................................................................
#                               NON-BLOCKING PRE-PRINT MACRO SET FOLLOWS
[gcode_macro _WAIT_Variable]
variable_count: 300                                                                  ; Default value. Total wait minutes is (duration * count) / 60
variable_duration: 2                                                                 ; Default value. Total wait minutes is (duration * count) / 60
variable_waiting: False                                                              ; True = waiting, False = not waiting
gcode:

[gcode_macro _WAIT_Start]
gcode:
    STATUS_HEATING                                                                   ; Set status to heating
    SET_NOZZLE_LEDS_ON                                                               ; Turn on nozzle LEDs
    {% set MINUTES = params.MINUTES|default(15)|int %}                               ; Get minutes from parameter or default
    {% set duration = printer["gcode_macro _WAIT_Variable"].duration|int %}          ; Get duration from variable
    {% set count = (MINUTES * 60) / duration %}                                      ; Calculate count
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=waiting VALUE=True              ; Set waiting to True
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=count VALUE={count}             ; Set count
    UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration}                         ; Update delay
    PAUSE_BASE                                                                       ; Pause print

[delayed_gcode WAIT_Delayed]
gcode:
    {% set count = printer["gcode_macro _WAIT_Variable"].count|int %}                ; Get count from variable
    {% set duration = printer["gcode_macro _WAIT_Variable"].duration|int %}          ; Get duration from variable
    M117 Pre-Print Heatsoaking... {((duration * count) / 60)|round(1)} minutes left. ; Display message
    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=count VALUE={count-1}           ; Decrement count
    {% if count > 0 %} _WAIT_Loop  {% endif %}                                       ; If count > 0, loop
    {% if count == 0 %}                                                              ; If count == 0, end loop
        SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=waiting VALUE=False         ; Set waiting to False
        _PRINT_START2                                                                ; Start the second part of the print start macro
    {% endif %}                                                                      ; End count check

[gcode_macro _WAIT_Loop]
gcode:
    {% set count = printer["gcode_macro _WAIT_Variable"].count|int %}                ; Get count from variable
    {% set duration = printer["gcode_macro _WAIT_Variable"].duration|int %}          ; Get duration from variable
    UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration}                         ; Update delay

[gcode_macro WAIT_Quit]
gcode:
    {% if printer["gcode_macro _WAIT_Variable"].waiting %}                           ; Check if waiting
        SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=count VALUE=0               ; Set count to 0
        UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION=1                              ; Update delay
      {% else %}                                                                     ; If not waiting
        M118 Not in waiting state, nothing to do.                                    ; Display message
    {% endif %}                                                                      ; End waiting check